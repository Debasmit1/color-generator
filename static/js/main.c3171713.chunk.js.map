{"version":3,"sources":["utils.js","SingleColor.js","App.js","index.js"],"names":["componentToHex","c","hex","toString","length","rgbToHex","r","g","b","SingleColor","rgb","weight","index","hexColor","useState","alert","setAlert","bcg","join","hexValue","useEffect","timeout","setTimeout","clearTimeout","className","style","backgroundColor","onClick","navigator","clipboard","writeText","App","color","setColor","error","setError","Values","all","list","setList","onSubmit","e","preventDefault","colors","console","log","type","value","onChange","target","placeholder","map","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2LAAA,SAASA,EAAeC,GACtB,IAAIC,EAAMD,EAAEE,SAAS,IACrB,OAAqB,GAAdD,EAAIE,OAAc,IAAMF,EAAMA,EAOxBG,MAJf,SAAkBC,EAAGC,EAAGC,GACtB,MAAO,IAAMR,EAAeM,GAAKN,EAAeO,GAAKP,EAAeQ,ICkBvDC,EArBK,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SAAc,EAC5BC,oBAAS,GADmB,mBAC/CC,EAD+C,KACzCC,EADyC,KAEjDC,EAAMP,EAAIQ,KAAK,KAEfC,GADMd,EAAQ,WAAR,cAAYK,IACV,WAAOG,IAOrB,OANAO,qBAAU,WACR,IAAMC,EAAUC,YAAW,WACzBN,GAAS,KACT,KACF,OAAO,kBAAMO,aAAaF,MAC1B,CAACN,IACI,6BAASS,UAAS,gBAAWZ,EAAQ,IAAM,eAAiBa,MAAO,CAACC,gBAAgB,OAAD,OAAQT,EAAR,MAAiBU,QAAS,WAClHX,GAAS,GACTY,UAAUC,UAAUC,UAAUX,KAE9B,uBAAGK,UAAU,iBAAiBb,EAA9B,KACA,uBAAGa,UAAU,eAAeL,GAC3BJ,GAAS,uBAAGS,UAAU,SAAb,yB,gBCyBCO,EAxCH,WAAO,IAAD,EACSjB,mBAAS,IADlB,mBACTkB,EADS,KACHC,EADG,OAESnB,oBAAS,GAFlB,mBAEToB,EAFS,KAEHC,EAFG,OAGOrB,mBAAS,IAAIsB,IAAO,WAAWC,IAAI,KAH1C,mBAGTC,EAHS,KAGJC,EAHI,KAgBhB,OACE,oCACE,6BAASf,UAAU,aACjB,+CACA,0BAAMgB,SAfS,SAACC,GACpBA,EAAEC,iBACF,IACE,IAAIC,EAAS,IAAIP,IAAOJ,GAAOK,IAAI,IACnCE,EAAQI,GACT,MAAMT,GACLC,GAAS,GACTS,QAAQC,IAAIX,MASR,2BAAOY,KAAK,OAAOC,MAAOf,EAAOgB,SAAU,SAACP,GAAD,OAAMR,EAASQ,EAAEQ,OAAOF,QAAQG,YAAY,UAAU1B,UAAS,UAAKU,EAAQ,QAAS,QAChI,4BAAQV,UAAU,MAAMsB,KAAK,UAA7B,YAGJ,6BAAStB,UAAU,UAChBc,EAAKa,KAAI,SAACnB,EAAMpB,GAEf,OAAO,kBAAC,EAAD,eAAawC,IAAKxC,GAAWoB,EAA7B,CAAoCpB,MAAOA,EAAOC,SAAUmB,EAAM9B,aC5BnFmD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.c3171713.chunk.js","sourcesContent":["function componentToHex(c) {\n  var hex = c.toString(16);\n  return hex.length == 1 ? '0' + hex : hex;\n}// rgb to hex formula\n\nfunction rgbToHex(r, g, b) {\n  return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\n}\n\nexport default rgbToHex;\n","import React, { useState, useEffect } from 'react'\nimport rgbToHex from './utils'\n\nconst SingleColor = ({ rgb, weight, index, hexColor}) => {\n  const [ alert,setAlert ] = useState(false);\n  const bcg = rgb.join(',')\n  const hex = rgbToHex(...rgb)\n  const hexValue = `#${hexColor}`\n  useEffect(()=>{\n    const timeout = setTimeout(()=>{\n      setAlert(false)\n    },3000)\n    return () => clearTimeout(timeout)\n  },[alert])\n  return <article className={`color ${index > 10 && 'color-light'}`} style={{backgroundColor:`rgb(${bcg})`}} onClick={()=>{\n    setAlert(true)\n    navigator.clipboard.writeText(hexValue);\n  }}>\n    <p className='percent-value'>{weight}%</p>\n    <p className=\"color-value\">{hexValue}</p>\n    {alert && <p className='alert'>copied to clipboard</p>}\n  </article>\n}\n\nexport default SingleColor\n","import React, { useState } from 'react'\nimport SingleColor from './SingleColor'\n\nimport Values from 'values.js'\n\nconst App = () => {\n  const [color,setColor] = useState('');\n  const [error,setError] = useState(false);\n  const [list,setList] = useState(new Values('#f15025').all(10));\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    try{\n      let colors = new Values(color).all(10)\n      setList(colors)\n    }catch(error){\n      setError(true);\n      console.log(error);\n    }\n  }\n\n  return(\n    <>\n      <section className='container'>\n        <h3>color generator</h3>\n        <form onSubmit={handleSubmit}>\n          <input type=\"text\" value={color} onChange={(e)=> setColor(e.target.value)} placeholder='#f15025' className={`${error ? 'error': null}`}/>\n          <button className='btn' type='Submit'>submit</button>\n        </form>\n      </section>\n      <section className='colors'>\n        {list.map((color,index)=>{\n\n          return <SingleColor key={index} {...color} index={index} hexColor={color.hex}/>\n        })}\n      </section>\n    </>\n\n  )\n}\n/*\nfunction App() {\n  return <h2>color generator project</h2>\n}*/\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}